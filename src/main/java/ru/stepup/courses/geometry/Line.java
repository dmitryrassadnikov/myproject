/*
#2.Создайте класс Линия (Line), расположенную на двумерной плоскости, которая описывается:

Координата начала: Точка
Координата конца: Точка
Создается одним из следующих способов:
с указанием двух Точек
с указанием четырех целых чисел (x y начала и x y конца)
Может возвращать текстовое представление вида “Линия от {X1;Y1} до {X2;Y2}”
Может вернуть длину Линии. Для расчёта длины следует использовать формулу расчёта гипотенузы: корень суммы квадратов катетов. Для извлечения корня можно использовать Math.sqrt.
Под Точкой имеется ввиду класс, созданный в задании 1 (точка координат).

Создайте три объекта Линии таким образом, чтобы:

Линия 1 начиналась в Точке  {1;3} и кончалась в Точке {5;8}.
Линия 2 начиналась в Точке {10;11} и кончалась в Точке {15;19}
Линия 3 начиналась в Точке конца Линии 1, а кончалась в Точке начала Линии 2
Используя эти объекты, выполните следующее:

Выведите текстовое представление Линии 3 на экран
Измените координаты точек начала и конца Линии 3 таким образом, чтобы изменились все три объекта Линии
Выведите текстовое представление Линии 3 на экран после изменения её состояния
Рассчитайте суммарную длину всех трех линий и выведите её на экран
Подсказка:

·       текстовое представление объекта лучше реализовывать в переопределенном методе toString().

·       наименование метода расчета длины линии - getLength
 */

package ru.stepup.courses.oop;

import static java.lang.Math.round;
import static java.lang.Math.sqrt;

public class Line {
    Point start;
    Point end;
    int x1, y1, x2, y2;

    public Line(Point start, Point end) {
        this.start = start;
        this.end = end;
    }

    public Line(int x1, int y1, int x2, int y2) {
        start = new Point(x1, y1);
        end = new Point(x2, y2);
    }

    public String toString() {
        return "Линия от " + start + " до " + end;
    }

    double getLength() {
        double dx = end.x - start.x;
        double dy = end.y - start.y;
        double length = (double) round(sqrt(dx * dx + dy * dy) * 10) / 10;
        return length;
    }

    public int[] getLines() {
        int[] lines = {start.x, start.y, end.x, end.y};
        return lines;
    }
}